/*
MyMiniFactory API

3D printable object API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CategoryChildrenItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryChildrenItemsInner{}

// CategoryChildrenItemsInner struct for CategoryChildrenItemsInner
type CategoryChildrenItemsInner struct {
	Id *int32 `json:"id,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewCategoryChildrenItemsInner instantiates a new CategoryChildrenItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryChildrenItemsInner() *CategoryChildrenItemsInner {
	this := CategoryChildrenItemsInner{}
	return &this
}

// NewCategoryChildrenItemsInnerWithDefaults instantiates a new CategoryChildrenItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryChildrenItemsInnerWithDefaults() *CategoryChildrenItemsInner {
	this := CategoryChildrenItemsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CategoryChildrenItemsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryChildrenItemsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CategoryChildrenItemsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CategoryChildrenItemsInner) SetId(v int32) {
	o.Id = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *CategoryChildrenItemsInner) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryChildrenItemsInner) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *CategoryChildrenItemsInner) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *CategoryChildrenItemsInner) SetSlug(v string) {
	o.Slug = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CategoryChildrenItemsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryChildrenItemsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CategoryChildrenItemsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CategoryChildrenItemsInner) SetName(v string) {
	o.Name = &v
}

func (o CategoryChildrenItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryChildrenItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableCategoryChildrenItemsInner struct {
	value *CategoryChildrenItemsInner
	isSet bool
}

func (v NullableCategoryChildrenItemsInner) Get() *CategoryChildrenItemsInner {
	return v.value
}

func (v *NullableCategoryChildrenItemsInner) Set(val *CategoryChildrenItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryChildrenItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryChildrenItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryChildrenItemsInner(val *CategoryChildrenItemsInner) *NullableCategoryChildrenItemsInner {
	return &NullableCategoryChildrenItemsInner{value: val, isSet: true}
}

func (v NullableCategoryChildrenItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryChildrenItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



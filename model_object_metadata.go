/*
MyMiniFactory API

3D printable object API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectMetadata{}

// ObjectMetadata struct for ObjectMetadata
type ObjectMetadata struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// 2: Public, 0: Private
	Visibility *int32 `json:"visibility,omitempty"`
	HowTo *string `json:"how_to,omitempty"`
	Dimensions *string `json:"dimensions,omitempty"`
	TimeToDoFrom *int32 `json:"time_to_do_from,omitempty"`
	TimeToDoTo *int32 `json:"time_to_do_to,omitempty"`
	SupportFree *bool `json:"support_free,omitempty"`
	FilamentQuantity *string `json:"filament_quantity,omitempty"`
	ClientUrl *string `json:"client_url,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Licenses []License `json:"licenses,omitempty"`
	Files []FileUploadRequest `json:"files,omitempty"`
	Images []ImageUploadRequest `json:"images,omitempty"`
}

// NewObjectMetadata instantiates a new ObjectMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectMetadata() *ObjectMetadata {
	this := ObjectMetadata{}
	return &this
}

// NewObjectMetadataWithDefaults instantiates a new ObjectMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectMetadataWithDefaults() *ObjectMetadata {
	this := ObjectMetadata{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ObjectMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ObjectMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ObjectMetadata) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ObjectMetadata) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ObjectMetadata) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ObjectMetadata) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ObjectMetadata) GetVisibility() int32 {
	if o == nil || IsNil(o.Visibility) {
		var ret int32
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetVisibilityOk() (*int32, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ObjectMetadata) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given int32 and assigns it to the Visibility field.
func (o *ObjectMetadata) SetVisibility(v int32) {
	o.Visibility = &v
}

// GetHowTo returns the HowTo field value if set, zero value otherwise.
func (o *ObjectMetadata) GetHowTo() string {
	if o == nil || IsNil(o.HowTo) {
		var ret string
		return ret
	}
	return *o.HowTo
}

// GetHowToOk returns a tuple with the HowTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetHowToOk() (*string, bool) {
	if o == nil || IsNil(o.HowTo) {
		return nil, false
	}
	return o.HowTo, true
}

// HasHowTo returns a boolean if a field has been set.
func (o *ObjectMetadata) HasHowTo() bool {
	if o != nil && !IsNil(o.HowTo) {
		return true
	}

	return false
}

// SetHowTo gets a reference to the given string and assigns it to the HowTo field.
func (o *ObjectMetadata) SetHowTo(v string) {
	o.HowTo = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *ObjectMetadata) GetDimensions() string {
	if o == nil || IsNil(o.Dimensions) {
		var ret string
		return ret
	}
	return *o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetDimensionsOk() (*string, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *ObjectMetadata) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given string and assigns it to the Dimensions field.
func (o *ObjectMetadata) SetDimensions(v string) {
	o.Dimensions = &v
}

// GetTimeToDoFrom returns the TimeToDoFrom field value if set, zero value otherwise.
func (o *ObjectMetadata) GetTimeToDoFrom() int32 {
	if o == nil || IsNil(o.TimeToDoFrom) {
		var ret int32
		return ret
	}
	return *o.TimeToDoFrom
}

// GetTimeToDoFromOk returns a tuple with the TimeToDoFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetTimeToDoFromOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeToDoFrom) {
		return nil, false
	}
	return o.TimeToDoFrom, true
}

// HasTimeToDoFrom returns a boolean if a field has been set.
func (o *ObjectMetadata) HasTimeToDoFrom() bool {
	if o != nil && !IsNil(o.TimeToDoFrom) {
		return true
	}

	return false
}

// SetTimeToDoFrom gets a reference to the given int32 and assigns it to the TimeToDoFrom field.
func (o *ObjectMetadata) SetTimeToDoFrom(v int32) {
	o.TimeToDoFrom = &v
}

// GetTimeToDoTo returns the TimeToDoTo field value if set, zero value otherwise.
func (o *ObjectMetadata) GetTimeToDoTo() int32 {
	if o == nil || IsNil(o.TimeToDoTo) {
		var ret int32
		return ret
	}
	return *o.TimeToDoTo
}

// GetTimeToDoToOk returns a tuple with the TimeToDoTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetTimeToDoToOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeToDoTo) {
		return nil, false
	}
	return o.TimeToDoTo, true
}

// HasTimeToDoTo returns a boolean if a field has been set.
func (o *ObjectMetadata) HasTimeToDoTo() bool {
	if o != nil && !IsNil(o.TimeToDoTo) {
		return true
	}

	return false
}

// SetTimeToDoTo gets a reference to the given int32 and assigns it to the TimeToDoTo field.
func (o *ObjectMetadata) SetTimeToDoTo(v int32) {
	o.TimeToDoTo = &v
}

// GetSupportFree returns the SupportFree field value if set, zero value otherwise.
func (o *ObjectMetadata) GetSupportFree() bool {
	if o == nil || IsNil(o.SupportFree) {
		var ret bool
		return ret
	}
	return *o.SupportFree
}

// GetSupportFreeOk returns a tuple with the SupportFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetSupportFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportFree) {
		return nil, false
	}
	return o.SupportFree, true
}

// HasSupportFree returns a boolean if a field has been set.
func (o *ObjectMetadata) HasSupportFree() bool {
	if o != nil && !IsNil(o.SupportFree) {
		return true
	}

	return false
}

// SetSupportFree gets a reference to the given bool and assigns it to the SupportFree field.
func (o *ObjectMetadata) SetSupportFree(v bool) {
	o.SupportFree = &v
}

// GetFilamentQuantity returns the FilamentQuantity field value if set, zero value otherwise.
func (o *ObjectMetadata) GetFilamentQuantity() string {
	if o == nil || IsNil(o.FilamentQuantity) {
		var ret string
		return ret
	}
	return *o.FilamentQuantity
}

// GetFilamentQuantityOk returns a tuple with the FilamentQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetFilamentQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.FilamentQuantity) {
		return nil, false
	}
	return o.FilamentQuantity, true
}

// HasFilamentQuantity returns a boolean if a field has been set.
func (o *ObjectMetadata) HasFilamentQuantity() bool {
	if o != nil && !IsNil(o.FilamentQuantity) {
		return true
	}

	return false
}

// SetFilamentQuantity gets a reference to the given string and assigns it to the FilamentQuantity field.
func (o *ObjectMetadata) SetFilamentQuantity(v string) {
	o.FilamentQuantity = &v
}

// GetClientUrl returns the ClientUrl field value if set, zero value otherwise.
func (o *ObjectMetadata) GetClientUrl() string {
	if o == nil || IsNil(o.ClientUrl) {
		var ret string
		return ret
	}
	return *o.ClientUrl
}

// GetClientUrlOk returns a tuple with the ClientUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetClientUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ClientUrl) {
		return nil, false
	}
	return o.ClientUrl, true
}

// HasClientUrl returns a boolean if a field has been set.
func (o *ObjectMetadata) HasClientUrl() bool {
	if o != nil && !IsNil(o.ClientUrl) {
		return true
	}

	return false
}

// SetClientUrl gets a reference to the given string and assigns it to the ClientUrl field.
func (o *ObjectMetadata) SetClientUrl(v string) {
	o.ClientUrl = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ObjectMetadata) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ObjectMetadata) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ObjectMetadata) SetTags(v string) {
	o.Tags = &v
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *ObjectMetadata) GetLicenses() []License {
	if o == nil || IsNil(o.Licenses) {
		var ret []License
		return ret
	}
	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetLicensesOk() ([]License, bool) {
	if o == nil || IsNil(o.Licenses) {
		return nil, false
	}
	return o.Licenses, true
}

// HasLicenses returns a boolean if a field has been set.
func (o *ObjectMetadata) HasLicenses() bool {
	if o != nil && !IsNil(o.Licenses) {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given []License and assigns it to the Licenses field.
func (o *ObjectMetadata) SetLicenses(v []License) {
	o.Licenses = v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *ObjectMetadata) GetFiles() []FileUploadRequest {
	if o == nil || IsNil(o.Files) {
		var ret []FileUploadRequest
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetFilesOk() ([]FileUploadRequest, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *ObjectMetadata) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []FileUploadRequest and assigns it to the Files field.
func (o *ObjectMetadata) SetFiles(v []FileUploadRequest) {
	o.Files = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ObjectMetadata) GetImages() []ImageUploadRequest {
	if o == nil || IsNil(o.Images) {
		var ret []ImageUploadRequest
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectMetadata) GetImagesOk() ([]ImageUploadRequest, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ObjectMetadata) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ImageUploadRequest and assigns it to the Images field.
func (o *ObjectMetadata) SetImages(v []ImageUploadRequest) {
	o.Images = v
}

func (o ObjectMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.HowTo) {
		toSerialize["how_to"] = o.HowTo
	}
	if !IsNil(o.Dimensions) {
		toSerialize["dimensions"] = o.Dimensions
	}
	if !IsNil(o.TimeToDoFrom) {
		toSerialize["time_to_do_from"] = o.TimeToDoFrom
	}
	if !IsNil(o.TimeToDoTo) {
		toSerialize["time_to_do_to"] = o.TimeToDoTo
	}
	if !IsNil(o.SupportFree) {
		toSerialize["support_free"] = o.SupportFree
	}
	if !IsNil(o.FilamentQuantity) {
		toSerialize["filament_quantity"] = o.FilamentQuantity
	}
	if !IsNil(o.ClientUrl) {
		toSerialize["client_url"] = o.ClientUrl
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Licenses) {
		toSerialize["licenses"] = o.Licenses
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	return toSerialize, nil
}

type NullableObjectMetadata struct {
	value *ObjectMetadata
	isSet bool
}

func (v NullableObjectMetadata) Get() *ObjectMetadata {
	return v.value
}

func (v *NullableObjectMetadata) Set(val *ObjectMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectMetadata(val *ObjectMetadata) *NullableObjectMetadata {
	return &NullableObjectMetadata{value: val, isSet: true}
}

func (v NullableObjectMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



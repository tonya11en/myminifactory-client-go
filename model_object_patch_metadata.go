/*
MyMiniFactory API

3D printable object API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectPatchMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectPatchMetadata{}

// ObjectPatchMetadata struct for ObjectPatchMetadata
type ObjectPatchMetadata struct {
	// 2: Public, 0: Private
	Visibility *int32 `json:"visibility,omitempty"`
}

// NewObjectPatchMetadata instantiates a new ObjectPatchMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectPatchMetadata() *ObjectPatchMetadata {
	this := ObjectPatchMetadata{}
	return &this
}

// NewObjectPatchMetadataWithDefaults instantiates a new ObjectPatchMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectPatchMetadataWithDefaults() *ObjectPatchMetadata {
	this := ObjectPatchMetadata{}
	return &this
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ObjectPatchMetadata) GetVisibility() int32 {
	if o == nil || IsNil(o.Visibility) {
		var ret int32
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectPatchMetadata) GetVisibilityOk() (*int32, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ObjectPatchMetadata) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given int32 and assigns it to the Visibility field.
func (o *ObjectPatchMetadata) SetVisibility(v int32) {
	o.Visibility = &v
}

func (o ObjectPatchMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectPatchMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableObjectPatchMetadata struct {
	value *ObjectPatchMetadata
	isSet bool
}

func (v NullableObjectPatchMetadata) Get() *ObjectPatchMetadata {
	return v.value
}

func (v *NullableObjectPatchMetadata) Set(val *ObjectPatchMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectPatchMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectPatchMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectPatchMetadata(val *ObjectPatchMetadata) *NullableObjectPatchMetadata {
	return &NullableObjectPatchMetadata{value: val, isSet: true}
}

func (v NullableObjectPatchMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectPatchMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


